"use strict";$(document).ready(function(){var a=document.querySelector(".header");document.onscroll=function(){100<=window.pageYOffset&&992<=document.body.offsetWidth||240<=window.pageYOffset&&992>document.body.offsetWidth?a.classList.add("header-fixHead"):a.classList.remove("fixHead")},$(".slider").slick({arrows:!1,dots:!0,infinite:!0,slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3}),$(".reviews-slider").slick({arrows:!0,dots:!1,infinite:!0,slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:3e3,prevArrow:"<div class=\"reviews-control-prev\"><svg class=\"bi bi-chevron-left\" width=\"50\" height=\"50\" viewBox=\"0 0 20 20\" fill=\"#fff\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M6.646 3.646a.5.5 0 01.708 0l6 6a.5.5 0 010 .708l-6 6a.5.5 0 01-.708-.708L12.293 10 6.646 4.354a.5.5 0 010-.708z\"/></svg></div>",nextArrow:"<div class=\"reviews-control-next\"><svg class=\"bi bi-chevron-right\" width=\"50\" height=\"50\" viewBox=\"0 0 20 20\" fill=\"#fff\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M6.646 3.646a.5.5 0 01.708 0l6 6a.5.5 0 010 .708l-6 6a.5.5 0 01-.708-.708L12.293 10 6.646 4.354a.5.5 0 010-.708z\"/></svg></div>"}),$(".small-img-item").click(function(){$(".small-img-item").removeClass("active-present"),$(this).addClass("active-present");var a=$(this)[0].getAttribute("src"),b=$(".big-img img").attr("src");$(".big-img img").attr("src",a)}),$(".smoothscroll").click(function(a){if(""!==this.hash){a.preventDefault();var b=this.hash;$("html, body").animate({scrollTop:$(b).offset().top},400)}})}),document.addEventListener("DOMContentLoaded",function(){function a(){d.style.transform="translate(".concat(0,"px,",0,"px)")}function b(a){d.style.transform="translate(".concat(-a.clientX/4,"px,").concat(-a.clientY/4,"px)")}try{var g=new Date;g.setDate(g.getDay()?g.getDate()-g.getDay()+8:g.getDate()+1),g.setHours(0,0,0);new LightCountdown(".countdown-week",g,{animation:"animated flipInX",animationDuration:"600ms"})}catch(a){console.error(a)}var c=document.getElementById("main"),d=document.getElementById("saleBlock"),e=document.body.offsetWidth,f=.8*document.body.offsetHeight;d.style.transition="0s",c.addEventListener("mousemove",function(c){1200<document.body.offsetWidth&&(b(c),(c.clientX>e||c.clientY>f)&&a())}),c.addEventListener("mouseout",function(){a()})}),$(document).ready(function(){$("form").submit(function(a){if(a.preventDefault(),"undefined"!=typeof sessionStorage)if(!sessionStorage.getItem("formSubmitted"))sessionStorage.setItem("formSubmitted","true");else if(!confirm("\u0412\u044B \u0443\u0436\u0435 \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u043B\u0438 \u0437\u0430\u044F\u0432\u043A\u0443, \u043F\u043E\u0432\u0442\u043E\u0440\u0438\u0442\u044C?"))return!1;var b=$(".active-present")[0].getAttribute("id"),c=$(this).serializeArray();return c.push({name:"source",value:"Test"}),c.push({name:"title",value:"Test message"}),c.push({name:"link",value:location.href}),c.push({name:"presentId",value:b}),console.log(JSON.stringify(c)),!1})});function submitPresentModal(){$(".preview-present").remove(),$(".modal-present").css("z-index",1);var a=$(".active-present")[0].getAttribute("src"),b=$("<img>"),c=$(".present-img");b.attr("src",a),b.addClass("preview-present"),c.append(b)}var HIDDEN_CLASS_NAME="hidden",TARGET_CLASS_NAME="target",SOURCE_CLASS_NAME="source",targetIdToShow=1;function main(){var a=getElements(TARGET_CLASS_NAME),b=getElements(SOURCE_CLASS_NAME);b.forEach(function(b){var c=extractId(b,SOURCE_CLASS_NAME);b.addEventListener("click",function(){showTarget(a,c)})}),showTarget(a,targetIdToShow)}function getElements(a){return[].slice.call(document.querySelectorAll("."+a)).sort(function(a,b){var c=extractId(a,TARGET_CLASS_NAME),d=extractId(b,TARGET_CLASS_NAME);return c>d})}function extractId(a,b){for(var e=a.classList.length;e--;){var c=a.classList.item(e),d=parseInt(c.split("-")[1]);if(!isNaN(d)){if(b+"-"+d===c)return d}}}function showTarget(a,b){a.forEach(function(a){var c=extractId(a,TARGET_CLASS_NAME);c===b?a.classList.remove(HIDDEN_CLASS_NAME):a.classList.add(HIDDEN_CLASS_NAME)})}main(),$("#modal-present-item").on("hidden.bs.modal",function(){$(".modal-present").css("z-index",1050)}),$(".nav-link").click(function(b){""!==this.hash&&(b.preventDefault(),b=this.hash,$("html, body").animate({scrollTop:$(b).offset().top},400))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJoZWFkZXIiLCJxdWVyeVNlbGVjdG9yIiwib25zY3JvbGwiLCJ3aW5kb3ciLCJwYWdlWU9mZnNldCIsImJvZHkiLCJvZmZzZXRXaWR0aCIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsInNsaWNrIiwiYXJyb3dzIiwiZG90cyIsImluZmluaXRlIiwic2xpZGVzVG9TaG93Iiwic2xpZGVzVG9TY3JvbGwiLCJhdXRvcGxheSIsImF1dG9wbGF5U3BlZWQiLCJwcmV2QXJyb3ciLCJuZXh0QXJyb3ciLCJjbGljayIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJhdHRyIiwiZ2V0QXR0cmlidXRlIiwic3JjIiwiZXZlbnQiLCJoYXNoIiwicHJldmVudERlZmF1bHQiLCJhbmltYXRlIiwic2Nyb2xsVG9wIiwib2Zmc2V0IiwidG9wIiwiYWRkRXZlbnRMaXN0ZW5lciIsImJsb2NrU3RvcCIsIm1vdmVCbG9jayIsInN0eWxlIiwidHJhbnNmb3JtIiwiYmxvY2tNb3ZlIiwiY2xpZW50WCIsImNsaWVudFkiLCJkYXRlRW5kIiwiRGF0ZSIsInNldERhdGUiLCJnZXREYXkiLCJnZXREYXRlIiwic2V0SG91cnMiLCJMaWdodENvdW50ZG93biIsImFuaW1hdGlvbiIsImFuaW1hdGlvbkR1cmF0aW9uIiwiZSIsImNvbnNvbGUiLCJlcnJvciIsImhlYWRlckJsb2NrIiwiZ2V0RWxlbWVudEJ5SWQiLCJtYXhDbGllbnRYIiwibWF4Q2xpZW50WSIsIm9mZnNldEhlaWdodCIsInRyYW5zaXRpb24iLCJzdWJtaXQiLCJzZXNzaW9uU3RvcmFnZSIsImdldEl0ZW0iLCJzZXRJdGVtIiwiY29uZmlybSIsInByZXNlbnRJZCIsImRhdGEiLCJzZXJpYWxpemVBcnJheSIsInB1c2giLCJuYW1lIiwidmFsdWUiLCJsb2NhdGlvbiIsImhyZWYiLCJsb2ciLCJKU09OIiwic3RyaW5naWZ5Iiwic3VibWl0UHJlc2VudE1vZGFsIiwiY3NzIiwiaW1nIiwicHJlc2VudEltZyIsImFwcGVuZCIsIkhJRERFTl9DTEFTU19OQU1FIiwiVEFSR0VUX0NMQVNTX05BTUUiLCJTT1VSQ0VfQ0xBU1NfTkFNRSIsInRhcmdldElkVG9TaG93IiwibWFpbiIsInRhcmdldHMiLCJnZXRFbGVtZW50cyIsInNvdXJjZXMiLCJmb3JFYWNoIiwic291cmNlTm9kZSIsInNvdXJjZU5vZGVJZCIsImV4dHJhY3RJZCIsInNob3dUYXJnZXQiLCJ0eXBlIiwic2xpY2UiLCJjYWxsIiwicXVlcnlTZWxlY3RvckFsbCIsInNvcnQiLCJ0YXJnZXROb2RlMSIsInRhcmdldE5vZGUyIiwidGFyZ2V0MU51bSIsInRhcmdldDJOdW0iLCJ0YXJnZXROb2RlIiwiYmFzZUNsYXNzIiwiY3VycmVudENsYXNzSW5kZXgiLCJsZW5ndGgiLCJjdXJyZW50Q2xhc3MiLCJpdGVtIiwibWF5YmVJZE51bSIsInBhcnNlSW50Iiwic3BsaXQiLCJpc05hTiIsInRhcmdldElkIiwiY3VycmVudFRhcmdldE5vZGVJZCIsIm9uIiwiYSJdLCJtYXBwaW5ncyI6ImFBQUFBLENBQUMsQ0FBQ0MsUUFBRCxDQUFELENBQVlDLEtBQVosQ0FBa0IsVUFBVSxDQUN4QixHQUFJQyxDQUFBQSxDQUFNLENBQUdGLFFBQVEsQ0FBQ0csYUFBVCxDQUF1QixTQUF2QixDQUFiLENBQ0FILFFBQVEsQ0FBQ0ksUUFBVCxDQUFvQixVQUFZLENBQ0gsR0FBdEIsRUFBQUMsTUFBTSxDQUFDQyxXQUFQLEVBQTBELEdBQTdCLEVBQUFOLFFBQVEsQ0FBQ08sSUFBVCxDQUFjQyxXQUEzQyxFQUF1RixHQUF0QixFQUFBSCxNQUFNLENBQUNDLFdBQVAsRUFBeUQsR0FBNUIsQ0FBQU4sUUFBUSxDQUFDTyxJQUFULENBQWNDLFdBRG5GLENBRXhCTixDQUFNLENBQUNPLFNBQVAsQ0FBaUJDLEdBQWpCLENBQXFCLGdCQUFyQixDQUZ3QixDQUl4QlIsQ0FBTSxDQUFDTyxTQUFQLENBQWlCRSxNQUFqQixDQUF3QixT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RSxpQkFBekIsQ0FFUCxDQVBELENBUUgsQ0FFREksSUFBSSxFLENBRUp2RixDQUFDLENBQUMscUJBQUQsQ0FBRCxDQUF5QnFILEVBQXpCLENBQTRCLGlCQUE1QixDQUErQyxVQUFhLENBQ3hEckgsQ0FBQyxDQUFDLGdCQUFELENBQUQsQ0FBb0IrRSxHQUFwQixDQUF3QixTQUF4QixDQUFtQyxJQUFuQyxDQUNILENBRkQsQyxDQUtBL0UsQ0FBQyxDQUFDLFdBQUQsQ0FBRCxDQUFldUIsS0FBZixDQUFxQixTQUFTK0YsQ0FBVCxDQUFZLENBQzdCLEtBQU8sS0FBS3hGLElBQVosR0FBcUJ3RixDQUFDLENBQUN2RixjQUFGLEdBQW9CdUYsQ0FBQyxDQUFHLEtBQUt4RixJQUE3QixDQUFtQzlCLENBQUMsQ0FBQyxZQUFELENBQUQsQ0FBZ0JnQyxPQUFoQixDQUF3QixDQUM1RUMsU0FBUyxDQUFFakMsQ0FBQyxDQUFDc0gsQ0FBRCxDQUFELENBQUtwRixNQUFMLEdBQWNDLEdBRG1ELENBQXhCLENBRXJELEdBRnFELENBQXhELENBR0gsQ0FKRCxDIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXtcclxuICAgIHZhciBoZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyJyk7XHJcbiAgICBkb2N1bWVudC5vbnNjcm9sbCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZih3aW5kb3cucGFnZVlPZmZzZXQgPj0gMTAwICYmIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGggPj0gOTkyIHx8IHdpbmRvdy5wYWdlWU9mZnNldCA+PSAyNDAgJiYgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aCA8IDk5Mil7XHJcbiAgICAgICAgICAgIGhlYWRlci5jbGFzc0xpc3QuYWRkKCdoZWFkZXItZml4SGVhZCcpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGhlYWRlci5jbGFzc0xpc3QucmVtb3ZlKCdmaXhIZWFkJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbi8vc2xpY2stc2xpZGVyLy9cclxuICAgICQoJy5zbGlkZXInKS5zbGljayh7XHJcbiAgICAgICAgYXJyb3dzOiBmYWxzZSxcclxuICAgICAgICBkb3RzOiB0cnVlLFxyXG4gICAgICAgIGluZmluaXRlOiB0cnVlLFxyXG4gICAgICAgIHNsaWRlc1RvU2hvdzogMSxcclxuICAgICAgICBzbGlkZXNUb1Njcm9sbDogMSxcclxuICAgICAgICBhdXRvcGxheTogdHJ1ZSxcclxuICAgICAgICBhdXRvcGxheVNwZWVkOiAzMDAwLFxyXG4gICAgfSk7XHJcblxyXG4gICAgJCgnLnJldmlld3Mtc2xpZGVyJykuc2xpY2soe1xyXG4gICAgICAgIGFycm93czogdHJ1ZSxcclxuICAgICAgICBkb3RzOiBmYWxzZSxcclxuICAgICAgICBpbmZpbml0ZTogdHJ1ZSxcclxuICAgICAgICBzbGlkZXNUb1Nob3c6IDEsXHJcbiAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXHJcbiAgICAgICAgYXV0b3BsYXk6IHRydWUsXHJcbiAgICAgICAgYXV0b3BsYXlTcGVlZDogMzAwMCxcclxuXHJcbiAgICAgICAgcHJldkFycm93OiAnPGRpdiBjbGFzcz1cInJldmlld3MtY29udHJvbC1wcmV2XCI+PHN2ZyBjbGFzcz1cImJpIGJpLWNoZXZyb24tbGVmdFwiIHdpZHRoPVwiNTBcIiBoZWlnaHQ9XCI1MFwiIHZpZXdCb3g9XCIwIDAgMjAgMjBcIiBmaWxsPVwiI2ZmZlwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgZD1cIk02LjY0NiAzLjY0NmEuNS41IDAgMDEuNzA4IDBsNiA2YS41LjUgMCAwMTAgLjcwOGwtNiA2YS41LjUgMCAwMS0uNzA4LS43MDhMMTIuMjkzIDEwIDYuNjQ2IDQuMzU0YS41LjUgMCAwMTAtLjcwOHpcIi8+PC9zdmc+PC9kaXY+JyxcclxuICAgICAgICBuZXh0QXJyb3c6ICc8ZGl2IGNsYXNzPVwicmV2aWV3cy1jb250cm9sLW5leHRcIj48c3ZnIGNsYXNzPVwiYmkgYmktY2hldnJvbi1yaWdodFwiIHdpZHRoPVwiNTBcIiBoZWlnaHQ9XCI1MFwiIHZpZXdCb3g9XCIwIDAgMjAgMjBcIiBmaWxsPVwiI2ZmZlwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgZD1cIk02LjY0NiAzLjY0NmEuNS41IDAgMDEuNzA4IDBsNiA2YS41LjUgMCAwMTAgLjcwOGwtNiA2YS41LjUgMCAwMS0uNzA4LS43MDhMMTIuMjkzIDEwIDYuNjQ2IDQuMzU0YS41LjUgMCAwMTAtLjcwOHpcIi8+PC9zdmc+PC9kaXY+J1xyXG4gICAgfSk7XHJcblxyXG5cclxuICAgICQoJy5zbWFsbC1pbWctaXRlbScpLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICQoJy5zbWFsbC1pbWctaXRlbScpLnJlbW92ZUNsYXNzKCdhY3RpdmUtcHJlc2VudCcpO1xyXG4gICAgICAgICQodGhpcykuYWRkQ2xhc3MoXCJhY3RpdmUtcHJlc2VudFwiKTtcclxuICAgICAgICBsZXQgYXR0ciA9ICQodGhpcylbMF0uZ2V0QXR0cmlidXRlKCdzcmMnKTtcclxuICAgICAgICBsZXQgc3JjID0gJCgnLmJpZy1pbWcgaW1nJykuYXR0cignc3JjJyk7XHJcbiAgICAgICAgJCgnLmJpZy1pbWcgaW1nJykuYXR0cignc3JjJywgYXR0cik7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgLy8gU21vb3RoIHNjcm9sbFxyXG4gICAgJChcIi5zbW9vdGhzY3JvbGxcIikuY2xpY2soZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaGFzaCAhPT0gXCJcIikge1xyXG4gICAgICAgICAgICAvLyBQcmV2ZW50IGRlZmF1bHQgYW5jaG9yIGNsaWNrIGJlaGF2aW9yXHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIC8vIFN0b3JlIGhhc2hcclxuICAgICAgICAgICAgdmFyIGhhc2ggPSB0aGlzLmhhc2g7XHJcbiAgICAgICAgICAgIC8vIFVzaW5nIGpRdWVyeSdzIGFuaW1hdGUoKSBtZXRob2QgdG8gYWRkIHNtb290aCBwYWdlIHNjcm9sbFxyXG4gICAgICAgICAgICAkKFwiaHRtbCwgYm9keVwiKS5hbmltYXRlKFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHNjcm9sbFRvcDogJChoYXNoKS5vZmZzZXQoKS50b3BcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICA0MDBcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufSlcclxuXHJcbi8vdGltZXIvL1xyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIC8vIGNvdW50ZG93blxyXG4gICAgICAgIGxldCBkYXRlRW5kID0gbmV3IERhdGUoKTtcclxuICAgICAgICBkYXRlRW5kLnNldERhdGUoZGF0ZUVuZC5nZXREYXkoKSA/IGRhdGVFbmQuZ2V0RGF0ZSgpIC0gZGF0ZUVuZC5nZXREYXkoKSArIDggOiBkYXRlRW5kLmdldERhdGUoKSArIDEpO1xyXG4gICAgICAgIGRhdGVFbmQuc2V0SG91cnMoMCwgMCwgMCk7XHJcbiAgICAgICAgbGV0IGNvdW50ZG93biA9IG5ldyBMaWdodENvdW50ZG93bihcIi5jb3VudGRvd24td2Vla1wiLCBkYXRlRW5kLCB7XHJcbiAgICAgICAgICAgIGFuaW1hdGlvbjogXCJhbmltYXRlZCBmbGlwSW5YXCIsXHJcbiAgICAgICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiBcIjYwMG1zXCJcclxuICAgICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGFuaW1hdGUgYmxvY2sgc2FsZSBpbiBoZWFkZXJcclxuICAgIHZhciBoZWFkZXJCbG9jayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcclxuICAgIHZhciBtb3ZlQmxvY2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNhbGVCbG9ja1wiKTtcclxuICAgIHZhciBtYXhDbGllbnRYID0gZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDtcclxuICAgIHZhciBtYXhDbGllbnRZID0gZG9jdW1lbnQuYm9keS5vZmZzZXRIZWlnaHQqMC44O1xyXG4gICAgLy8gc2V0IGRlZmF1bHQgYW5pbWF0ZSBkZWxheVxyXG4gICAgbW92ZUJsb2NrLnN0eWxlLnRyYW5zaXRpb24gPSBcIjBzXCI7XHJcblxyXG4gICAgZnVuY3Rpb24gYmxvY2tTdG9wKCkge1xyXG4gICAgICAgIG1vdmVCbG9jay5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlKCR7MH1weCwkezB9cHgpYDtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBibG9ja01vdmUoZXZlbnQpIHtcclxuICAgICAgICBtb3ZlQmxvY2suc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgkey1ldmVudC5jbGllbnRYLzR9cHgsJHstZXZlbnQuY2xpZW50WS80fXB4KWA7XHJcbiAgICB9XHJcblxyXG4gICAgaGVhZGVyQmxvY2suYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBpZihkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoID4gMTIwMCl7XHJcbiAgICAgICAgICAgIGJsb2NrTW92ZShldmVudCk7XHJcbiAgICAgICAgICAgIGlmIChldmVudC5jbGllbnRYID4gbWF4Q2xpZW50WCB8fCBldmVudC5jbGllbnRZID4gbWF4Q2xpZW50WSkge1xyXG4gICAgICAgICAgICAgICAgYmxvY2tTdG9wKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIGhlYWRlckJsb2NrLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgYmxvY2tTdG9wKCk7XHJcbiAgICB9KTtcclxuXHJcblxyXG59KTtcclxuXHJcbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgIC8vIEZvcm0gc3VibWl0XHJcbiAgICAkKFwiZm9ybVwiKS5zdWJtaXQoZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBzZXNzaW9uU3RvcmFnZSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAgICAgaWYgKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ2Zvcm1TdWJtaXR0ZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFjb25maXJtKCfQktGLINGD0LbQtSDQvtGC0L/RgNCw0LLQuNC70Lgg0LfQsNGP0LLQutGDLCDQv9C+0LLRgtC+0YDQuNGC0Yw/JykpIHsgcmV0dXJuIGZhbHNlIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ2Zvcm1TdWJtaXR0ZWQnLCAndHJ1ZScpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHByZXNlbnRJZCA9ICQoJy5hY3RpdmUtcHJlc2VudCcpWzBdLmdldEF0dHJpYnV0ZSgnaWQnKTtcclxuICAgICAgICBsZXQgZGF0YSA9ICQodGhpcykuc2VyaWFsaXplQXJyYXkoKTtcclxuICAgICAgICBkYXRhLnB1c2goe1xyXG4gICAgICAgICAgICBuYW1lOiBcInNvdXJjZVwiLFxyXG4gICAgICAgICAgICB2YWx1ZTogXCJUZXN0XCJcclxuICAgICAgICB9KTtcclxuICAgICAgICBkYXRhLnB1c2goe1xyXG4gICAgICAgICAgICBuYW1lOiBcInRpdGxlXCIsXHJcbiAgICAgICAgICAgIHZhbHVlOiBcIlRlc3QgbWVzc2FnZVwiXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZGF0YS5wdXNoKHtcclxuICAgICAgICAgICAgbmFtZTogXCJsaW5rXCIsXHJcbiAgICAgICAgICAgIHZhbHVlOiBsb2NhdGlvbi5ocmVmXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZGF0YS5wdXNoKHtcclxuICAgICAgICAgICAgbmFtZTogXCJwcmVzZW50SWRcIixcclxuICAgICAgICAgICAgdmFsdWU6IHByZXNlbnRJZFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShkYXRhKSk7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBUZXN0aW5nXHJcblxyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICB1cmw6IFwiaHR0cHM6Ly9za2lka2EtdHV0LmJ5L2FjdGlvbi9pbmRleC5waHBcIixcclxuICAgICAgICAgICAgaGVhZGVyczogeyAnWC1SZXF1ZXN0ZWQtV2l0aCc6ICdYTUxIdHRwUmVxdWVzdCcgfSxcclxuICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgIH0pLmRvbmUoZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgIGFsZXJ0KHJlc3BvbnNlLnRleHQpO1xyXG4gICAgICAgIH0pLmZhaWwoZnVuY3Rpb24gKGVycm9yLCB0ZXh0U3RhdHVzKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yLCB0ZXh0U3RhdHVzKTtcclxuICAgICAgICAgICAgYWxlcnQoJ9CY0LfQstC40L3QuNGC0LUsINC/0YDQvtC40LfQvtGI0LvQsCDQvtGI0LjQsdC60LAg0LfQsNC/0YDQvtGB0LAuINCh0LLRj9C20LjRgtC10YHRjCDRgSDQvNC10L3QtdC00LbQtdGA0L7QvCDQv9C+INGC0LXQu9C10YTQvtC90YMhJyk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIEV2ZW50IGRpc3BhdGNoZXIgZm9yIElFOSsgaW5jbHVkZWRcclxuICAgICAgICBpZiAodHlwZW9mIChFdmVudCkgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2FwcC5mb3JtLnNlbmQnKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdmFyIGV2ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XHJcbiAgICAgICAgICAgIGV2LmluaXRFdmVudCgnYXBwLmZvcm0uc2VuZCcsIGZhbHNlLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXYpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xyXG4gICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gc3VibWl0UHJlc2VudE1vZGFsKCkge1xyXG4gICAgJCgnLnByZXZpZXctcHJlc2VudCcpLnJlbW92ZSgpO1xyXG4gICAgJCgnLm1vZGFsLXByZXNlbnQnKS5jc3MoJ3otaW5kZXgnLCAxKTtcclxuICAgIGxldCBhdHRyID0gJCgnLmFjdGl2ZS1wcmVzZW50JylbMF0uZ2V0QXR0cmlidXRlKCdzcmMnKTtcclxuICAgIGxldCBpbWcgPSAkKFwiPGltZz5cIik7XHJcbiAgICBsZXQgcHJlc2VudEltZyA9ICQoJy5wcmVzZW50LWltZycpO1xyXG4gICAgaW1nLmF0dHIoJ3NyYycsYXR0cik7XHJcbiAgICBpbWcuYWRkQ2xhc3MoXCJwcmV2aWV3LXByZXNlbnRcIik7XHJcbiAgICBwcmVzZW50SW1nLmFwcGVuZChpbWcpO1xyXG59XHJcblxyXG5sZXQgSElEREVOX0NMQVNTX05BTUUgPSAnaGlkZGVuJ1xyXG5sZXQgVEFSR0VUX0NMQVNTX05BTUUgPSAndGFyZ2V0J1xyXG5sZXQgU09VUkNFX0NMQVNTX05BTUUgPSAnc291cmNlJ1xyXG5cclxubGV0IHRhcmdldElkVG9TaG93ID0gMVxyXG5cclxuZnVuY3Rpb24gbWFpbigpIHtcclxuICAgIGxldCB0YXJnZXRzID0gZ2V0RWxlbWVudHMoVEFSR0VUX0NMQVNTX05BTUUpXHJcbiAgICBsZXQgc291cmNlcyA9IGdldEVsZW1lbnRzKFNPVVJDRV9DTEFTU19OQU1FKVxyXG4gICAgc291cmNlcy5mb3JFYWNoKGZ1bmN0aW9uIChzb3VyY2VOb2RlKSB7XHJcbiAgICAgICAgbGV0IHNvdXJjZU5vZGVJZCA9IGV4dHJhY3RJZChzb3VyY2VOb2RlLCBTT1VSQ0VfQ0xBU1NfTkFNRSlcclxuICAgICAgICBzb3VyY2VOb2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBzaG93VGFyZ2V0KHRhcmdldHMsIHNvdXJjZU5vZGVJZClcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuICAgIHNob3dUYXJnZXQodGFyZ2V0cywgdGFyZ2V0SWRUb1Nob3cpXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldEVsZW1lbnRzKHR5cGUpIHtcclxuICAgIHJldHVybiBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy4nICsgdHlwZSkpLnNvcnQoZnVuY3Rpb24gKHRhcmdldE5vZGUxLCB0YXJnZXROb2RlMikge1xyXG4gICAgICAgIGxldCB0YXJnZXQxTnVtID0gZXh0cmFjdElkKHRhcmdldE5vZGUxLCBUQVJHRVRfQ0xBU1NfTkFNRSlcclxuICAgICAgICBsZXQgdGFyZ2V0Mk51bSA9IGV4dHJhY3RJZCh0YXJnZXROb2RlMiwgVEFSR0VUX0NMQVNTX05BTUUpXHJcbiAgICAgICAgcmV0dXJuIHRhcmdldDFOdW0gPiB0YXJnZXQyTnVtXHJcbiAgICB9KVxyXG59XHJcblxyXG5mdW5jdGlvbiBleHRyYWN0SWQodGFyZ2V0Tm9kZSwgYmFzZUNsYXNzKSB7XHJcbiAgICBsZXQgY3VycmVudENsYXNzSW5kZXggPSB0YXJnZXROb2RlLmNsYXNzTGlzdC5sZW5ndGhcclxuICAgIHdoaWxlIChjdXJyZW50Q2xhc3NJbmRleC0tKSB7XHJcbiAgICAgICAgbGV0IGN1cnJlbnRDbGFzcyA9IHRhcmdldE5vZGUuY2xhc3NMaXN0Lml0ZW0oY3VycmVudENsYXNzSW5kZXgpXHJcbiAgICAgICAgbGV0IG1heWJlSWROdW0gPSBwYXJzZUludChjdXJyZW50Q2xhc3Muc3BsaXQoJy0nKVsxXSlcclxuICAgICAgICBpZiAoaXNOYU4obWF5YmVJZE51bSkpIHtcclxuICAgICAgICAgICAgY29udGludWVcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGNsYXNzU3RyaW5Ub1ZhbGlkYXRlID0gYmFzZUNsYXNzICsgJy0nICsgbWF5YmVJZE51bVxyXG4gICAgICAgIGlmIChjbGFzc1N0cmluVG9WYWxpZGF0ZSA9PT0gY3VycmVudENsYXNzKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBtYXliZUlkTnVtXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBzaG93VGFyZ2V0KHRhcmdldHMsIHRhcmdldElkKSB7XHJcbiAgICB0YXJnZXRzLmZvckVhY2goZnVuY3Rpb24gKHRhcmdldE5vZGUsIHRhcmdldEluZGV4KSB7XHJcbiAgICAgICAgbGV0IGN1cnJlbnRUYXJnZXROb2RlSWQgPSBleHRyYWN0SWQodGFyZ2V0Tm9kZSwgVEFSR0VUX0NMQVNTX05BTUUpXHJcbiAgICAgICAgaWYgKGN1cnJlbnRUYXJnZXROb2RlSWQgPT09IHRhcmdldElkKSB7XHJcbiAgICAgICAgICAgIHRhcmdldE5vZGUuY2xhc3NMaXN0LnJlbW92ZShISURERU5fQ0xBU1NfTkFNRSlcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0YXJnZXROb2RlLmNsYXNzTGlzdC5hZGQoSElEREVOX0NMQVNTX05BTUUpXHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxufVxyXG5cclxubWFpbigpXHJcblxyXG4kKCcjbW9kYWwtcHJlc2VudC1pdGVtJykub24oJ2hpZGRlbi5icy5tb2RhbCcsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAkKCcubW9kYWwtcHJlc2VudCcpLmNzcygnei1pbmRleCcsIDEwNTApO1xyXG59KVxyXG5cclxuXHJcbiQoXCIubmF2LWxpbmtcIikuY2xpY2soZnVuY3Rpb24oYSkge1xyXG4gICAgXCJcIiAhPT0gdGhpcy5oYXNoICYmIChhLnByZXZlbnREZWZhdWx0KCksIGEgPSB0aGlzLmhhc2gsICQoXCJodG1sLCBib2R5XCIpLmFuaW1hdGUoe1xyXG4gICAgICAgIHNjcm9sbFRvcDogJChhKS5vZmZzZXQoKS50b3BcclxuICAgIH0sIDQwMCkpXHJcbn0pOyJdfQ==
